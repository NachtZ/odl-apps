package com.example.mystats
import org.osgi.framework._
/*
import org.opendaylight.controller.sal.core.Node
import org.opendaylight.controller.sal.match.MatchType
import org.opendaylight.controller.sal.reader.FlowOnNode
import org.opendaylight.controller.sal.utils.ServiceHelper
*/
import org.opendaylight.controller.sal._
import org.opendaylight.controller.statisticsmanager.IStatisticsManager
import org.opendaylight.controller.switchmanager.ISwitchManager
import org.opendaylight.controller.sal.utils.ServiceHelper
import scala.collection.JavaConversions._

class Activator extends BundleActivator {
  override def start(context: BundleContext) {
    println("Start OSGi Bundle...")
  }

  override def stop(context: BundleContext) {
    println("Stop OSGi Bundle...")
  }
}

class MyStats {
  def start() = {
    println("Start class")
    getFlowStatistics
  }

	def getFlowStatistics = {
		val containerName = "default"
		//val statsManager:IStatisticsManager = org.opendaylight.controller.sal.utils.ServiceHelper.getInstance(classOf[IStatisticsManager], containerName, this).asInstanceOf[IStatisticsManager]
    //val swmgrclass = classOf[ISwitchManager]
    //println(swmgrclass)
		//val switchManager:ISwitchManager = ServiceHelper.getInstance(classOf[ISwitchManager], containerName, this).asInstanceOf[ISwitchManager]
    //val nodes:scala.collection.mutable.Set[org.opendaylight.controller.sal.core.Node] = switchManager.getNodes()
    /*
    for (node <- nodes) {
      println("Node: " + node)
    }
    */
    //println(classOf[switchManager.getNodes])
	
/*
		for (Node node : switchManager.getNodes()) {
			System.out.println("Node: " + node);
			for (FlowOnNode flow : statsManager.getFlows(node)) {
				System.out.println(" DST: " + 
					flow.getFlow().getMatch().getField(MatchType.NW_DST) + 
					" Bytes: " + 
					flow.getByteCount())
			}
		}
*/
	}
}

object Hi {
  def main(args: Array[String]) = {
    println("Hi!")

		val containerName = "default"
		//val switchManager:ISwitchManager = ServiceHelper.getInstance(classOf[ISwitchManager], containerName, this).asInstanceOf[ISwitchManager]
    //val nodes = switchManager.getNodes()
    //println(nodes.getClass)
  }
}
